# Example Docker Compose with secrets configuration
# This example shows how to use Docker secrets with ZITADEL

version: '3.8'

services:
  zitadel:
    image: zitadel/zitadel:latest
    environment:
      # Use _FILE environment variables to read from Docker secrets
      - ZITADEL_DATABASE_POSTGRES_USER_PASSWORD_FILE=/run/secrets/db_password
      - ZITADEL_DATABASE_POSTGRES_ADMIN_PASSWORD_FILE=/run/secrets/db_admin_password
      - ZITADEL_MASTERKEY_FILE=/run/secrets/masterkey
      
      # Regular configuration can still use environment variables
      - ZITADEL_DATABASE_POSTGRES_HOST=postgres
      - ZITADEL_DATABASE_POSTGRES_PORT=5432
      - ZITADEL_DATABASE_POSTGRES_DATABASE=zitadel
      - ZITADEL_DATABASE_POSTGRES_USER_USERNAME=zitadel_user
      - ZITADEL_DATABASE_POSTGRES_ADMIN_USERNAME=postgres
      
    secrets:
      - db_password
      - db_admin_password
      - masterkey
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: zitadel
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD_FILE: /run/secrets/db_admin_password
    secrets:
      - db_admin_password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d zitadel -U postgres"]
      interval: 5s
      timeout: 60s
      retries: 10
      start_period: 5s

secrets:
  db_password:
    file: ./secrets/db_password.txt
  db_admin_password:
    file: ./secrets/db_admin_password.txt
  masterkey:
    file: ./secrets/masterkey.txt
